#include "utility/Colors.hpp"

#define rgb(r, g, b) math::Vector<ui8, 3>({ r, g, b })

// Generated with http://phrogz.net/css/distinct-colors.html
std::array<math::Vector<ui8, 3>, 100> game::COLORS = {{
	rgb(191,0,0), rgb(204,153,51), rgb(0,115,61), rgb(0,34,64), rgb(204,0,163),
	rgb(89,0,0), rgb(127,96,32), rgb(0,64,34), rgb(45,116,179), rgb(140,35,119),
	rgb(242,85,61), rgb(255,204,0), rgb(61,242,182), rgb(0,102,255), rgb(255,0,170),
	rgb(102,36,26), rgb(204,173,51), rgb(38,153,115), rgb(0,76,191), rgb(64,0,43),
	rgb(242,65,0), rgb(153,130,38), rgb(22,89,67), rgb(0,65,242), rgb(102,26,77),
	rgb(140,37,0), rgb(89,83,0), rgb(51,204,173), rgb(22,40,89), rgb(255,0,136),
	rgb(242,109,61), rgb(51,48,0), rgb(0,255,238), rgb(29,40,115), rgb(127,0,68),
	rgb(178,80,45), rgb(242,230,61), rgb(0,77,71), rgb(0,0,77), rgb(204,51,133),
	rgb(127,57,32), rgb(155,166,0), rgb(41,166,157), rgb(41,41,166), rgb(242,0,97),
	rgb(51,23,13), rgb(217,255,64), rgb(0,238,255), rgb(16,16,64), rgb(166,0,66),
	rgb(255,102,0), rgb(108,128,32), rgb(0,107,115), rgb(24,0,179), rgb(89,0,36),
	rgb(191,77,0), rgb(59,89,0), rgb(0,48,51), rgb(17,0,128), rgb(242,0,65),
	rgb(89,36,0), rgb(136,255,0), rgb(0,204,255), rgb(68,0,255), rgb(127,0,34),
	rgb(166,91,41), rgb(27,51,0), rgb(0,92,115), rgb(109,0,204), rgb(255,0,34),
	rgb(217,116,0), rgb(98,179,45), rgb(45,152,179), rgb(48,0,89), rgb(153,0,20),
	rgb(140,75,0), rgb(57,128,32), rgb(0,162,242), rgb(157,61,242), rgb(64,0,9),
	rgb(51,27,0), rgb(25,191,0), rgb(0,85,128), rgb(99,38,153), rgb(191,48,67),
	rgb(178,116,45), rgb(22,89,22), rgb(48,143,191), rgb(48,16,64), rgb(89,58,22),
	rgb(0,255,68), rgb(16,48,64), rgb(190,0,204), rgb(242,162,0), rgb(61,242,133),
	rgb(0,122,230), rgb(95,0,102), rgb(64,43,0), rgb(41,166,91), rgb(0,82,153)
}};

math::Vector<ui8, 3> game::randColor()
{
	srand((ui32)time(0));
	auto idxColor = rand() % game::COLORS.size();
	return game::COLORS[idxColor];
}
